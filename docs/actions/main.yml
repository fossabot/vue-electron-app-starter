name: Build Electron App For Win/Mac/Linux

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: build and release electron app

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2.3.4

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.3
        with:
          node-version: 14

      - name: npm install
        run: |
          npm install

      # build app for win
      - name: build windows app
        if: startsWith(matrix.os, 'windows')
        run: |
          npm run electron:build-win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # build app for mac
      - name: build mac app
        if: startsWith(matrix.os, 'macos')
        run: |
          npm run electron:build-mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step5: cleanup artifacts in dist_electron
      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-2019'
        run: |
          npx rimraf "dist_electron/!(*.exe)"

      - name: cleanup artifacts for macosZ
        if: matrix.os == 'macos-10.15'
        run: |
          npx rimraf "dist_electron/!(*.dmg)"

      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: dist_electron

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "dist_electron/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
